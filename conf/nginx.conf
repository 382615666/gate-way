user root;
worker_processes  1;
events {
    use   epoll;
    worker_connections 1024;
}
# 需要的系统环境变量
# 版本号 git tag
env VERSION;
# REDIS 数据库的主机名 (必须)
env REDIS_HOST;
# REDIS 数据库的端口号 (非必须，默认 6379)
env REDIS_PORT;
# NGINX 运行环境变量 （非必须，默认 production)
env NGINX_ENV;
# 前端应用名称（服务名称，必须） 
env APP_NAME;
# 反向代理配置 (非必须)
env PROXY;
# 认证配置 (非必须)
env AUTH;
# 访问日志格式 (非必须)
env ACCESS_LOG_FORMAT;
# 静态文件配置 （非必须)
env STATIC_FILE;
# open api调用统计 （非必须）
env API_STATISTICS;

http {
    # log_format main '[INFO ][$date][$app_name]$user_id $trace_id 0 "$server_protocol" "$request_method" "http://$host$request_uri" "$http_user_agent" $status $request_time_ms $body_bytes_sent "$http_referer"';

    # log_format error '[ERROR][$date][$app_name]$user_id $trace_id 0 "$server_protocol" "$request_method" "http://$host$request_uri" "$http_user_agent" $status $request_time_ms $body_bytes_sent "$http_referer"';

    # http 块基础配置
    access_log  off;
    sendfile        on;
    keepalive_timeout  65;
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript text/html application/javascript application/json;

    client_max_body_size 30m;
    client_body_buffer_size 30m;

    client_header_buffer_size 4k; #默认是4k
    large_client_header_buffers 4 8k;

    include mime.types;
    tcp_nodelay on;
    lua_shared_dict info 10m;
    lua_package_path '/src/?.lua;/src/lib/?.lua;;';
    lua_code_cache on;
    # lua_code_cache off;

    charset  utf-8;

    resolver 127.0.0.11 valid=30s;
    
	proxy_buffer_size 128k;
	proxy_buffers   32 128k;
	proxy_busy_buffers_size 128k;    

    init_worker_by_lua_block {
        local uuid = require 'resty.jit-uuid'
        uuid.seed() -- very important!
    }

    server {
        # server 块 基础配置
        listen 80;

        error_page 404 500 502 504 @jump_to_error;

        proxy_http_version 1.1;
        proxy_set_header Connection '';

        set_by_lua $env 'return os.getenv("NGINX_ENV") or "production"';

        location @jump_to_error {
            access_log off;
            default_type 'text/html';
            content_by_lua_file /src/error.lua;
        }

        location /api/env {
            default_type application/json;
            echo '{ "env" : "$env" }';
        }
        

        location = /_internal/proxy {
            internal;
            set $proxyuri '$proxyuri';
            default_type application/json;
            proxy_headers_hash_max_size 51200;
            proxy_headers_hash_bucket_size 6400;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass '$proxyuri';
        }

        location /_internal/static/ {
            internal;
            set $staticfiledir '$staticfiledir';
            alias  '$staticfiledir';
        }

        location / {
            content_by_lua_file /src/main.lua;
        }
    }
}
